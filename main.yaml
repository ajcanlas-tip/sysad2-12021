---
  - name: Installing webserver
    hosts: docker

    tasks:
      - name: getting vars
        inclde_vars:
          file: conf.yaml

      - name: installing docker requirements on ubuntu
        include_role:
          name: ubuntu-docker
        vars:
          url: ""
          repo: ""
          filename: ""
          package:
            - apt-transport-https
            - ca-certificates
            - curl
            - gnupg-agent
            - software-properties-common
            - python3
            - python3-pip
          service: ""
        when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

      - name: installing docker on ubuntu
        include_role:
          name: ubuntu-docker
        vars:
          url: "https://download.docker.com/linux/ubuntu/gpg"
          repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
          filename: "docker-ce"
          package:
            - docker-ce
            - docker-ce-cli
            - containerd.io
          service: docker
        when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

      - name: installing docker on centos
        include_role:
          name: centos-docker
        vars:
          src: "{{ docker_repo }}"
          dest: "/etc/yum.repos.d/docker-ce.repo"
          package:
            - docker-ce
            - python3
            - python3-pip
          service: docker
        when: ansible_distribution == 'CentOs' or ansible_distribution == 'Red Hat Enterprise Linux'

      - name: Disabling firewall on ubuntu
        service:
          name: ufw
          state: stopped
          enabled: no
        when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

      - name: Disabling firewall on centos
        service:
          name: firewalld
          state: stopped
          enabled: no
        when: ansible_distribution == 'CentOs' or ansible_distribution == 'Red Hat Enterprise Linux'

      - name: Installing docker via pip
        pip:
          name: docker
          state: present

      - name: Adding user to docker group
        user:
          name: $USER
          group: docker
          append: yes

      - name: building lampstack
        include_role:
          name: lamp-docker
